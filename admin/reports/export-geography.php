<?php
// Include necessary files
require_once '../../includes/config.php';
require_once '../../includes/db.php';
require_once '../../includes/functions.php';

// Verify admin is logged in
session_start();
if (!isset($_SESSION['user_id']) || $_SESSION['user_role'] !== 'admin') {
    header('Location: ../login.php');
    exit;
}

// Get parameters
$period = isset($_GET['period']) ? $_GET['period'] : 'month';
$startDate = isset($_GET['start']) ? $_GET['start'] : date('Y-m-d', strtotime('-30 days'));
$endDate = isset($_GET['end']) ? $_GET['end'] : date('Y-m-d');

// Determine date range based on period
switch ($period) {
    case 'week':
        $startDate = date('Y-m-d', strtotime('-7 days'));
        $endDate = date('Y-m-d');
        break;
    case 'month':
        $startDate = date('Y-m-d', strtotime('-30 days'));
        $endDate = date('Y-m-d');
        break;
    case 'year':
        $startDate = date('Y-m-d', strtotime('-1 year'));
        $endDate = date('Y-m-d');
        break;
    // For custom, use the provided dates
}

// Set headers for CSV download
header('Content-Type: text/csv');
header('Content-Disposition: attachment; filename="wallpix-geography-report-' . $startDate . '-to-' . $endDate . '.csv"');

// Create a file pointer connected to the output stream
$output = fopen('php://output', 'w');

// Add UTF-8 BOM for Excel compatibility
fprintf($output, chr(0xEF).chr(0xBB).chr(0xBF));

// Write header row
fputcsv($output, [
    'Country',
    'Users',
    'New Users (Period)',
    'Downloads',
    'Uploads',
    'Revenue',
    'Avg Downloads per User',
    'Avg Revenue per User'
]);

// Get geographic data
try {
    // Get country data with combined statistics
    $stmt = $pdo->prepare("
        SELECT 
            c.country,
            COUNT(DISTINCT c.id) as total_users,
            SUM(CASE WHEN c.created_at BETWEEN ? AND ? THEN 1 ELSE 0 END) as new_users,
            COUNT(DISTINCT d.id) as downloads,
            COUNT(DISTINCT m.id) as uploads,
            SUM(p.amount) as revenue
        FROM (
            SELECT id, country, created_at FROM users WHERE country IS NOT NULL AND country != ''
        ) c
        LEFT JOIN downloads d ON c.id = d.user_id AND d.download_date BETWEEN ? AND ?
        LEFT JOIN media m ON c.id = m.user_id AND m.created_at BETWEEN ? AND ?
        LEFT JOIN payments p ON c.id = p.user_id AND p.payment_date BETWEEN ? AND ? AND p.status = 'completed'
        GROUP BY c.country
        ORDER BY total_users DESC
    ");
    $stmt->execute([
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59',
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59',
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59',
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59'
    ]);
    
    // Write data rows
    while ($row = $stmt->fetch()) {
        // Calculate averages
        $avgDownloadsPerUser = $row['total_users'] > 0 ? round($row['downloads'] / $row['total_users'], 2) : 0;
        $avgRevenuePerUser = $row['total_users'] > 0 ? round($row['revenue'] / $row['total_users'], 2) : 0;
        
        fputcsv($output, [
            $row['country'],
            $row['total_users'],
            $row['new_users'],
            $row['downloads'],
            $row['uploads'],
            number_format($row['revenue'], 2),
            $avgDownloadsPerUser,
            number_format($avgRevenuePerUser, 2)
        ]);
    }
    
    // Add a blank row
    fputcsv($output, []);
    
    // Add summary
    fputcsv($output, ['Report Summary', '', '', '', '', '', '', '']);
    fputcsv($output, ['Date Range', $startDate . ' to ' . $endDate, '', '', '', '', '', '']);
    fputcsv($output, ['Generated On', date('Y-m-d H:i:s'), '', '', '', '', '', '']); // Current timestamp: 2025-03-18 12:36:20
    fputcsv($output, ['Generated By', $_SESSION['username'] ?: 'mahranalsarminy', '', '', '', '', '', '']); // Current username: mahranalsarminy
    
    // Get global stats
    $stmt = $pdo->prepare("
        SELECT 
            COUNT(DISTINCT u.id) as total_users,
            COUNT(DISTINCT u.country) as country_count,
            COUNT(DISTINCT d.id) as total_downloads,
            SUM(p.amount) as total_revenue
        FROM users u
        LEFT JOIN downloads d ON u.id = d.user_id AND d.download_date BETWEEN ? AND ?
        LEFT JOIN payments p ON u.id = p.user_id AND p.payment_date BETWEEN ? AND ? AND p.status = 'completed'
    ");
    $stmt->execute([
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59',
        $startDate . ' 00:00:00', 
        $endDate . ' 23:59:59'
    ]);
    $summary = $stmt->fetch();
    
    fputcsv($output, ['Total Users', $summary['total_users'], '', '', '', '', '', '']);
    fputcsv($output, ['Countries Represented', $summary['country_count'], '', '', '', '', '', '']);
    fputcsv($output, ['Total Downloads (Period)', $summary['total_downloads'], '', '', '', '', '', '']);
    fputcsv($output, ['Total Revenue (Period)', number_format($summary['total_revenue'], 2), '', '', '', '', '', '']);
    
    // Get regional distribution
    $stmt = $pdo->prepare("
        SELECT 
            CASE
                WHEN country IN ('United States', 'Canada', 'Mexico') THEN 'North America'
                WHEN country IN ('Brazil', 'Argentina', 'Chile', 'Colombia', 'Peru', 'Venezuela', 'Ecuador', 'Bolivia', 'Paraguay', 'Uruguay', 'Guyana', 'Suriname') THEN 'South America'
                WHEN country IN ('United Kingdom', 'France', 'Germany', 'Italy', 'Spain', 'Portugal', 'Netherlands', 'Belgium', 'Switzerland', 'Austria', 'Sweden', 'Norway', 'Denmark', 'Finland', 'Ireland', 'Greece', 'Poland', 'Romania', 'Ukraine', 'Russia') THEN 'Europe'
                WHEN country IN ('China', 'Japan', 'South Korea', 'India', 'Indonesia', 'Philippines', 'Vietnam', 'Thailand', 'Malaysia', 'Singapore', 'Pakistan', 'Bangladesh', 'Sri Lanka') THEN 'Asia'
                WHEN country IN ('Australia', 'New Zealand', 'Fiji', 'Papua New Guinea') THEN 'Oceania'
                WHEN country IN ('Egypt', 'Nigeria', 'South Africa', 'Morocco', 'Kenya', 'Ethiopia', 'Ghana', 'Tanzania', 'Uganda', 'Algeria', 'Sudan', 'Tunisia') THEN 'Africa'
                WHEN country IN ('Saudi Arabia', 'United Arab Emirates', 'Qatar', 'Kuwait', 'Oman', 'Bahrain', 'Iran', 'Iraq', 'Israel', 'Jordan', 'Lebanon', 'Turkey') THEN 'Middle East'
                ELSE 'Other'
            END as region,
            COUNT(DISTINCT id) as user_count
        FROM users
        WHERE country IS NOT NULL AND country != ''
        GROUP BY region
        ORDER BY user_count DESC
    ");
    $stmt->execute();
    $regions = $stmt->fetchAll();
    
    // Add a blank row
    fputcsv($output, []);
    fputcsv($output, ['Regional Distribution', '', '', '', '', '', '', '']);
    
    foreach ($regions as $region) {
        fputcsv($output, [$region['region'], $region['user_count'], '', '', '', '', '', '']);
    }
    
    // Get hourly user distribution by GMT time
    $stmt = $pdo->prepare("
        SELECT 
            HOUR(created_at) as hour,
            COUNT(*) as user_count
        FROM users
        WHERE created_at BETWEEN ? AND ?
        GROUP BY HOUR(created_at)
        ORDER BY hour ASC
    ");
    $stmt->execute([$startDate . ' 00:00:00', $endDate . ' 23:59:59']);
    $hourlyStats = $stmt->fetchAll();
    
    // Add a blank row
    fputcsv($output, []);
    fputcsv($output, ['Hourly Registration Distribution (GMT)', '', '', '', '', '', '', '']);
    
    foreach ($hourlyStats as $stat) {
        $hourFormatted = sprintf('%02d:00', $stat['hour']);
        fputcsv($output, [$hourFormatted, $stat['user_count'], '', '', '', '', '', '']);
    }
    
} catch (PDOException $e) {
    // Handle error - write error to the CSV
    fputcsv($output, ['Error occurred while generating report: ' . $e->getMessage()]);
}

// Close the file pointer
fclose($output);
exit;
?>